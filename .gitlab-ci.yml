default:
  image: archlinux:latest
  tags:
    - docker

.min_packages_template: &min_packages_definition
  - pacman -Syu --noconfirm
    boost
    boost-libs
    ccache
    cmake
    eigen
    fmt
    gcc
    mold
    ninja
    opencv
    pybind11
    python
    python-numpy

stages:
  - build
  - test

build:
  stage: build
  before_script:
    - *min_packages_definition
  script:
    - export CCACHE_BASEDIR=$(pwd)
    - export CCACHE_DIR=$(pwd)/.cache/
    - export CXXFLAGS='-fdiagnostics-color --coverage -fuse-ld=mold'
    - cmake . -B build/
      -DCMAKE_BUILD_TYPE=Debug
      -DCMAKE_CXX_COMPILER_LAUNCHER=/usr/bin/ccache
      -DCMAKE_MODULE_LINKER_FLAGS_DEBUG=-ltbb
      -GNinja
    - cmake --build build/
  cache:
    key: "$CI_PROJECT_ID"
    paths:
      - .cache/
  artifacts:
    untracked: true

test:
  stage: test
  before_script:
    - *min_packages_definition
    - pacman -Sy --noconfirm
      gcovr
      python-pytest
      python-pytest-xdist
  script:
    # Run unit tests
    - ctest --test-dir build/
      -C Debug -j$(nproc)
      --output-on-failure
      --output-junit ctest.xml
  after_script:
    # Run coverage
    - cd build/
    - mkdir coverage
    - gcovr -r .. . -s
      --html -o coverage/report.html
      --xml coverage.xml
  needs:
    - build
  coverage: '/lines:\s+(\d+\.\d+|\d+)%/'
  artifacts:
    when: always
    paths:
      - build/coverage
    reports:
      coverage_report:
        coverage_format: cobertura
        path: build/coverage.xml
      junit: build/ctest.xml

lint:
  stage: test
  needs:
    - build
  allow_failure: true
  before_script:
    - pacman -Sy --noconfirm
      autopep8
      flake8
      python-isort
  script:
    - autopep8 --exit-code --diff -r .
    - flake8 .
    - isort --check-only --diff .
