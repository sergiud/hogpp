default:
  tags:
    - docker

stages:
  - build
  - test

.build_template: &build_definition
  stage: build
  script:
    - export CCACHE_BASEDIR=$PWD
    - export CCACHE_DIR=$PWD/.cache/
    - export CXXFLAGS='-fdiagnostics-color --coverage -fuse-ld=mold'
    - export pybind11_DIR=$(pybind11-config --cmakedir)
    - cmake . -B build/
      -DCMAKE_BUILD_TYPE=Debug
      -DCMAKE_CXX_COMPILER_LAUNCHER=/usr/bin/ccache
      -DCMAKE_REQUIRE_FIND_PACKAGE_pybind11=ON
      -DCMAKE_REQUIRE_FIND_PACKAGE_Python=ON
      -DCMAKE_REQUIRE_FIND_PACKAGE_Sphinx=ON
      -GNinja
    - cmake --build build/
  cache:
    key: "$CI_PROJECT_ID"
    paths:
      - .cache/
  artifacts:
    paths:
      - build/
    exclude:
      - build/**/*.o

.skbuild_template: &skbuild_definition
  stage: build
  before_script:
    - python -m venv .env/
  script:
    - source .env/bin/activate
    - export CCACHE_BASEDIR=$PWD
    - export CCACHE_DIR=$PWD/.cache/
    - export CMAKE_CXX_COMPILER_LAUNCHER=/usr/bin/ccache
    - export CXXFLAGS='--coverage -fuse-ld=mold'
    - export pybind11_DIR=$(pybind11-config --cmakedir)
    - pip install -r requirements.txt
    - pip install --no-build-isolation
      --config-settings build-dir=build/
      --config-settings cmake.build-type=Debug
      --verbose
      --editable .
  cache:
    key: "$CI_PROJECT_ID"
    paths:
      - .cache/
  artifacts:
    paths:
      - .env/
      - build/

.docs_template: &docs_definition
  stage: build
  script:
    - PYTHONPATH=${CI_PROJECT_DIR}/build/
      sphinx-build -M html
      ${CI_PROJECT_DIR}/docs/
      ${CI_PROJECT_DIR}/build/docs/_build/
      -W --keep-going
  artifacts:
    paths:
      - build/docs/

.skdocs_template: &skdocs_definition
  stage: build
  script:
    - source .env/bin/activate
    - sphinx-build -M html
      ${CI_PROJECT_DIR}/docs/
      ${CI_PROJECT_DIR}/docs/_build
      -W --keep-going
  artifacts:
    paths:
      - docs/_build/html/

.test_template: &test_definition
  stage: test
  needs:
    - build
  script:
    # Run unit tests
    - ctest --test-dir build/
      -C Debug -j$(nproc)
      --output-on-failure
      --output-junit ctest.xml
  after_script:
    # Run coverage
    - cd build/
    - mkdir coverage
    - gcovr -r .. . -s
      --html -o coverage/report.html
      --xml coverage.xml
  coverage: '/lines:\s+(\d+\.\d+|\d+)%/'
  artifacts:
    when: always
    paths:
      - build/coverage
    reports:
      coverage_report:
        coverage_format: cobertura
        path: build/coverage.xml
      junit: build/ctest.xml

.pytest_template: &pytest_definition
  stage: test
  script:
    - source .env/bin/activate
    - coverage run -m pytest --junit-xml=report.xml
    - coverage report
    - coverage xml
  coverage: '/TOTAL.+ ([0-9]{1,3}%)/'
  artifacts:
    when: always
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml
      junit: report.xml

.lint_template: &lint_definition
  stage: test
  allow_failure: true
  script:
    - black --check --diff .
    - flake8 .
    - isort --check-only --diff .

build:python3.9:
  image: sergiud/hogpp:python3.9
  <<: *skbuild_definition

docs:python3.9:
  image: sergiud/hogpp:python3.9
  <<: *skdocs_definition
  needs:
    - build:python3.9

test:python3.9:
  image: sergiud/hogpp:python3.9
  <<: *pytest_definition
  needs:
    - build:python3.9

build:python3.10:
  image: sergiud/hogpp:python3.10
  <<: *skbuild_definition

docs:python3.10:
  image: sergiud/hogpp:python3.10
  <<: *skdocs_definition
  needs:
    - build:python3.10

test:python3.10:
  image: sergiud/hogpp:python3.10
  <<: *pytest_definition
  needs:
    - build:python3.10

lint:python3.10:
  image: sergiud/hogpp:python3.10
  <<: *lint_definition
  needs: []

build:python3.11:
  image: sergiud/hogpp:python3.11
  <<: *skbuild_definition

docs:python3.11:
  image: sergiud/hogpp:python3.11
  <<: *skdocs_definition
  needs:
    - build:python3.11

test:python3.11:
  image: sergiud/hogpp:python3.11
  <<: *pytest_definition
  needs:
    - build:python3.11

lint:python3.11:
  image: sergiud/hogpp:python3.11
  <<: *lint_definition
  needs: []

build:python3.12:
  image: sergiud/hogpp:python3.12
  <<: *skbuild_definition

docs:python3.12:
  image: sergiud/hogpp:python3.12
  <<: *skdocs_definition
  needs:
    - build:python3.12

test:python3.12:
  image: sergiud/hogpp:python3.12
  <<: *pytest_definition
  needs:
    - build:python3.12

lint:python3.12:
  image: sergiud/hogpp:python3.12
  <<: *lint_definition
  needs: []

build:python3.13:
  image: sergiud/hogpp:python3.13
  <<: *skbuild_definition

docs:python3.13:
  image: sergiud/hogpp:python3.13
  <<: *skdocs_definition
  needs:
    - build:python3.13

test:python3.13:
  image: sergiud/hogpp:python3.13
  <<: *pytest_definition
  needs:
    - build:python3.13

lint:python3.13:
  image: sergiud/hogpp:python3.13
  <<: *lint_definition
  needs: []

build:python3.14:
  image: sergiud/hogpp:python3.14
  <<: *skbuild_definition

docs:python3.14:
  image: sergiud/hogpp:python3.14
  <<: *skdocs_definition
  needs:
    - build:python3.14

test:python3.14:
  image: sergiud/hogpp:python3.14
  <<: *pytest_definition
  needs:
    - build:python3.14

lint:python3.14:
  image: sergiud/hogpp:python3.14
  <<: *lint_definition
  needs: []

build:pypy3.10:
  image: sergiud/hogpp:pypy3.10
  <<: *skbuild_definition

docs:pypy3.10:
  image: sergiud/hogpp:pypy3.10
  <<: *skdocs_definition
  needs:
    - build:pypy3.10

test:pypy3.10:
  image: sergiud/hogpp:pypy3.10
  <<: *pytest_definition
  needs:
    - build:pypy3.10

lint:pypy3.10:
  image: sergiud/hogpp:pypy3.10
  <<: *lint_definition
  needs: []

build:pypy3.11:
  image: sergiud/hogpp:pypy3.11
  <<: *skbuild_definition

docs:pypy3.11:
  image: sergiud/hogpp:pypy3.11
  <<: *skdocs_definition
  needs:
    - build:pypy3.11

test:pypy3.11:
  image: sergiud/hogpp:pypy3.11
  <<: *pytest_definition
  needs:
    - build:pypy3.11

lint:pypy3.11:
  image: sergiud/hogpp:pypy3.11
  <<: *lint_definition
  needs: []

lint:cpp:
  image: sergiud/hogpp:lint-21
  stage: test
  allow_failure: true
  script:
    - fdfind -g '*.[ch]pp' -x clang-format-21 --dry-run --Werror
  needs: []

build:trixie:
  image: sergiud/hogpp:trixie
  <<: *build_definition

docs:trixie:
  image: sergiud/hogpp:trixie
  <<: *docs_definition
  needs:
    - build:trixie

test:trixie:
  image: sergiud/hogpp:trixie
  <<: *test_definition
  needs:
    - build:trixie
