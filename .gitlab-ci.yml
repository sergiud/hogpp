default:
  image: archlinux:latest
  tags:
    - docker

.min_packages_template: &min_packages_definition
  - pacman -Syu --noconfirm
    boost
    boost-libs
    ccache
    cmake
    eigen
    fmt
    gcc
    ninja
    opencv
    pybind11
    python
    python-numpy

stages:
  - build
  - test

build:
  stage: build
  before_script:
    - *min_packages_definition
  script:
    - export CCACHE_BASEDIR=$(pwd)
    - export CCACHE_DIR=$(pwd)/.cache/
    - export CXXFLAGS='-fdiagnostics-color --coverage'
    - cmake . -B build/
      -DCMAKE_BUILD_TYPE=Debug
      -DCMAKE_CXX_COMPILER_LAUNCHER=/usr/bin/ccache
      -DCMAKE_MODULE_LINKER_FLAGS_DEBUG=-ltbb
      -GNinja
    - cmake --build build/
  cache:
    key: "$CI_PROJECT_ID"
    paths:
      - .cache/
  artifacts:
    untracked: true

test:
  stage: test
  before_script:
    - *min_packages_definition
    - pacman -Sy --noconfirm
      python-pip
      python-pytest
      python-pytest-xdist
    - pip install
      'gcovr==5.0'
      'jinja2<3.1'
  script:
    # Run unit tests
    - ctest --test-dir build/
      -C Debug -j$(nproc)
      --output-on-failure
      --output-junit ctest.xml
  after_script:
    # Run coverage
    - cd build/
    - mkdir coverage
    - gcovr -r .. . -s
      --html -o coverage/report.html
      --xml cobertura.xml
  coverage: '/lines:\s+(\d+\.\d+|\d+)%/'
  artifacts:
    when: always
    paths:
      - build/coverage
    reports:
      cobertura: build/cobertura.xml
      junit: build/ctest.xml
