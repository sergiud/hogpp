name: Wheels

on:
  schedule:
    - cron: '42 2 * * *'
  push:
    tags:
      - v*

jobs:
  build-wheels:
    name: Build wheels on ${{matrix.os}}
    runs-on: ${{matrix.os}}
    env:
      CIBW_ARCHS_LINUX: auto64
      CIBW_ARCHS_MACOS: auto64
      CIBW_ARCHS_WINDOWS: auto64
      CIBW_CACHE_PATH: ${{github.workspace}}/.cibuildwheel/
      CIBW_ENVIRONMENT_LINUX: CXXFLAGS="-flto=auto -DPYBIND11_DETAILED_ERROR_MESSAGES"
      CIBW_ENVIRONMENT_MACOS: CXXFLAGS="-flto=auto -DPYBIND11_DETAILED_ERROR_MESSAGES" MACOSX_DEPLOYMENT_TARGET=11.0
      CIBW_ENVIRONMENT_WINDOWS: CXXFLAGS="/GL /DPYBIND11_DETAILED_ERROR_MESSAGES" LDFLAGS=/LTCG
      # As for Pillow 11.3.0, there is no Windows arm64 wheel for PyPy.
      # Additionally, NumPy releases supporting Python 3.10 do not provide arm64
      # wheels for Windows either. We therefore skip the tests to avoid
      # compiling both Pillow and NumPy from source which generally will fail
      # due to missing dependencies.
      CIBW_TEST_SKIP: cp310-win_arm64 pp*-win_arm64
    strategy:
      matrix:
        os:
          - macos-15
          - ubuntu-24.04
          - ubuntu-24.04-arm
          - windows-2025
          - windows-11-arm

    steps:
      - uses: actions/checkout@v5

      - name: Cache cibuildwheel
        id: cache-cibuildwheel
        uses: actions/cache@v4
        with:
          path: .cibuildwheel/
          key: ${{matrix.os}}-cibuildwheel

      - name: Build
        uses: pypa/cibuildwheel@v3.2.1

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
          path: wheelhouse/*.whl

  build-sdist:
    name: Build sdist
    runs-on: ubuntu-24.04

    steps:
      - uses: actions/checkout@v5

      - name: Setup Python
        uses: actions/setup-python@v6
        with:
          python-version: 3.14
          cache: 'pip'
          cache-dependency-path: requirements.txt

      - name: Setup Dependencies
        run: |
          pip install -r requirements.txt

      - name: Build
        run: |
          pipx run build --sdist --verbose

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-sdist
          path: dist/

  publish-to-testpypi:
    name: Publish to TestPyPI
    if: false # Used for testing purposes only, no trigger conditions yet
    runs-on: ubuntu-24.04
    needs:
      - build-sdist
      - build-wheels
    environment:
      name: TestPyPI
      url: https://test.pypi.org/p/hogpp
    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing

    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v5
        with:
          pattern: cibw-*
          path: dist/
          merge-multiple: true

      - name: Publish
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/

  publish-to-pypi:
    name: Publish to PyPI
    if: startsWith(github.ref, 'refs/tags/')  # only publish to PyPI on tag pushes
    runs-on: ubuntu-24.04
    needs:
      - build-sdist
      - build-wheels
    environment:
      name: PyPI
      url: https://pypi.org/p/hogpp
    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing

    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v5
        with:
          pattern: cibw-*
          path: dist/
          merge-multiple: true

      - name: Publish
        uses: pypa/gh-action-pypi-publish@release/v1

  deploy-artifacts:
    name: Deploy Artifacts
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-24.04
    needs:
      - build-wheels

    steps:
      - name: Download
        uses: actions/download-artifact@v5
        with:
          pattern: cibw-*
          path: dist/
          merge-multiple: true

      - name: Deploy
        uses: softprops/action-gh-release@v2
        with:
          files:
            dist/*.whl
