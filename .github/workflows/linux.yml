name: Linux

on: [push, pull_request]

jobs:
  build:
    name: GCC-${{matrix.build_type}}-Python-${{matrix.python}}
    runs-on: ubuntu-20.04
    defaults:
      run:
        shell: bash
    strategy:
      fail-fast: true
      matrix:
        build_type:
          - Release
          - Debug
        python:
          - '3.7'
          - '3.8'
          - '3.9'
          - '3.10'

    steps:
      - uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{matrix.python}}
          architecture: ${{matrix.arch}}
          cache: 'pip'
          cache-dependency-path: requirements_dev.txt

      - name: Setup Dependencies
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential \
            cmake \
            lcov \
            libboost-test-dev \
            libeigen3-dev \
            libfmt-dev \
            libopencv-dev \
            ninja-build

          pip install -r requirements_dev.txt

      - name: Setup Environment
        run: |
          echo "pybind11_ROOT=$(pybind11-config --cmakedir)" >> $GITHUB_ENV

      - name: Setup Debug Environment
        if: ${{matrix.build_type == 'Debug'}}
        run: |
          echo 'CXXFLAGS=--coverage' >> $GITHUB_ENV

      - name: Configure
        env:
          Python_ROOT: ${{env.pythonLocation}}
        run: |
          cmake -S . -B build_${{matrix.build_type}} \
                -DCMAKE_REQUIRE_FIND_PACKAGE_pybind11=ON \
                -G Ninja

      - name: Build
        run: |
          cmake --build build_${{matrix.build_type}} \
                --config ${{matrix.build_type}}

      - name: Test
        run: |
          ctest --test-dir build_${{matrix.build_type}} \
                --config ${{matrix.build_type}} \
                -j$(nproc) \
                --output-on-failure

      - name: Generate Coverage
        if: ${{matrix.build_type == 'Debug'}}
        run: |
          lcov --directory . --capture --output-file coverage.info
          lcov --remove coverage.info \
              '${{env.pythonLocation}}/*' \
              '${{github.workspace}}/tests/*' \
              '*/site-packages/pybind11/include/*' \
              '/usr/*' \
              --output-file coverage.info
          lcov --list coverage.info

      - name: Upload Coverage to Codecov
        if: ${{matrix.build_type == 'Debug'}}
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true
          verbose: true
